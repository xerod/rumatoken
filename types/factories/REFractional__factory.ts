/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { REFractional, REFractionalInterface } from "../REFractional";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "buyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ethReserved",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintUniqueTokenTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "payRent",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "realEstateObjects",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "securePeriod",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "securedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "secureToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "withdrawOperatingCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018cb380380620018cb8339818101604052810190620000379190620000d6565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000150565b600081519050620000d08162000136565b92915050565b600060208284031215620000e957600080fd5b6000620000f984828501620000bf565b91505092915050565b60006200010f8262000116565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001418162000102565b81146200014d57600080fd5b50565b61176b80620001606000396000f3fe60806040526004361061009c5760003560e01c8063b762722811610064578063b7627228146101a2578063bc197c81146101be578063d9e8843f146101fb578063e1cba58014610217578063f23a6e6114610240578063fff780681461027d5761009c565b806301ffc9a7146100a1578063057466ea146100de57806312065fe0146100fa5780633cd30cb514610125578063b6d5e8cd14610165575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610e6a565b6102ba565b6040516100d59190611187565b60405180910390f35b6100f860048036038101906100f39190610ee5565b610334565b005b34801561010657600080fd5b5061010f6105d4565b60405161011c919061127d565b60405180910390f35b34801561013157600080fd5b5061014c60048036038101906101479190610e93565b6105dc565b60405161015c9493929190611142565b60405180910390f35b34801561017157600080fd5b5061018c60048036038101906101879190610e05565b610639565b604051610199919061127d565b60405180910390f35b6101bc60048036038101906101b79190610ee5565b610741565b005b3480156101ca57600080fd5b506101e560048036038101906101e09190610cb7565b610965565b6040516101f291906111a2565b60405180910390f35b61021560048036038101906102109190610e93565b61097a565b005b34801561022357600080fd5b5061023e60048036038101906102399190610ee5565b6109eb565b005b34801561024c57600080fd5b5061026760048036038101906102629190610d76565b610a95565b60405161027491906111a2565b60405180910390f35b34801561028957600080fd5b506102a4600480360381019061029f9190610e93565b610aaa565b6040516102b1919061127d565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061032d575061032c82610ac2565b5b9050919050565b6002600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008281526020019081526020016000206002015482346103ce9190611392565b101561040f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104069061125d565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b815260040161048c9291906110e2565b60206040518083038186803b1580156104a457600080fd5b505afa1580156104b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dc9190610ebc565b101561051d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105149061121d565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163384866040518563ffffffff1660e01b815260040161059e949392919061108a565b600060405180830381600087803b1580156105b857600080fd5b505af11580156105cc573d6000803e3d6000fd5b505050505050565b600047905090565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060010154908060020154905084565b60006106456001610b2c565b60006106516001610b42565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663156e29f68583866040518463ffffffff1660e01b81526004016106b09392919061110b565b600060405180830381600087803b1580156106ca57600080fd5b505af11580156106de573d6000803e3d6000fd5b50505050836002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508091505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b815260040161079c929190611061565b60206040518083038186803b1580156107b457600080fd5b505afa1580156107c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ec9190610e41565b61082b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610822906111dd565b60405180910390fd5b6000341161086e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610865906111fd565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333084866040518563ffffffff1660e01b81526004016108cd949392919061108a565b600060405180830381600087803b1580156108e757600080fd5b505af11580156108fb573d6000803e3d6000fd5b50505050816002600083815260200190815260200160002060010154610921919061133c565b600260008381526020019081526020016000206001018190555081346109479190611392565b60026000838152602001908152602001600020600201819055505050565b600063bc197c8160e01b905095945050505050565b60003414156109be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b5906111bd565b60405180910390fd5b346003600083815260200190815260200160002060008282546109e1919061133c565b9250508190555050565b806002600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a879061123d565b60405180910390fd5b505050565b600063f23a6e6160e01b905095945050505050565b60036020528060005260406000206000915090505481565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6000610b63610b5e846112bd565b611298565b90508083825260208201905082856020860282011115610b8257600080fd5b60005b85811015610bb25781610b988882610c8d565b845260208401935060208301925050600181019050610b85565b5050509392505050565b6000610bcf610bca846112e9565b611298565b905082815260208101848484011115610be757600080fd5b610bf2848285611444565b509392505050565b600081359050610c09816116d9565b92915050565b600082601f830112610c2057600080fd5b8135610c30848260208601610b50565b91505092915050565b600081519050610c48816116f0565b92915050565b600081359050610c5d81611707565b92915050565b600082601f830112610c7457600080fd5b8135610c84848260208601610bbc565b91505092915050565b600081359050610c9c8161171e565b92915050565b600081519050610cb18161171e565b92915050565b600080600080600060a08688031215610ccf57600080fd5b6000610cdd88828901610bfa565b9550506020610cee88828901610bfa565b945050604086013567ffffffffffffffff811115610d0b57600080fd5b610d1788828901610c0f565b935050606086013567ffffffffffffffff811115610d3457600080fd5b610d4088828901610c0f565b925050608086013567ffffffffffffffff811115610d5d57600080fd5b610d6988828901610c63565b9150509295509295909350565b600080600080600060a08688031215610d8e57600080fd5b6000610d9c88828901610bfa565b9550506020610dad88828901610bfa565b9450506040610dbe88828901610c8d565b9350506060610dcf88828901610c8d565b925050608086013567ffffffffffffffff811115610dec57600080fd5b610df888828901610c63565b9150509295509295909350565b60008060408385031215610e1857600080fd5b6000610e2685828601610bfa565b9250506020610e3785828601610c8d565b9150509250929050565b600060208284031215610e5357600080fd5b6000610e6184828501610c39565b91505092915050565b600060208284031215610e7c57600080fd5b6000610e8a84828501610c4e565b91505092915050565b600060208284031215610ea557600080fd5b6000610eb384828501610c8d565b91505092915050565b600060208284031215610ece57600080fd5b6000610edc84828501610ca2565b91505092915050565b60008060408385031215610ef857600080fd5b6000610f0685828601610c8d565b9250506020610f1785828601610c8d565b9150509250929050565b610f2a816113c3565b82525050565b610f39816113d5565b82525050565b610f48816113e1565b82525050565b6000610f5b601e8361132b565b9150610f6682611522565b602082019050919050565b6000610f7e606c8361132b565b9150610f898261154b565b608082019050919050565b6000610fa160308361132b565b9150610fac826115e6565b604082019050919050565b6000610fc4602b8361132b565b9150610fcf82611635565b604082019050919050565b6000610fe7601e8361132b565b9150610ff282611684565b602082019050919050565b600061100a60008361131a565b9150611015826116ad565b600082019050919050565b600061102d60118361132b565b9150611038826116b0565b602082019050919050565b61104c8161142d565b82525050565b61105b81611437565b82525050565b60006040820190506110766000830185610f21565b6110836020830184610f21565b9392505050565b600060a08201905061109f6000830187610f21565b6110ac6020830186610f21565b6110b96040830185611043565b6110c66060830184611043565b81810360808301526110d781610ffd565b905095945050505050565b60006040820190506110f76000830185610f21565b6111046020830184611043565b9392505050565b60006060820190506111206000830186610f21565b61112d6020830185611043565b61113a6040830184611043565b949350505050565b60006080820190506111576000830187610f21565b6111646020830186611052565b6111716040830185611043565b61117e6060830184611043565b95945050505050565b600060208201905061119c6000830184610f30565b92915050565b60006020820190506111b76000830184610f3f565b92915050565b600060208201905081810360008301526111d681610f4e565b9050919050565b600060208201905081810360008301526111f681610f71565b9050919050565b6000602082019050818103600083015261121681610f94565b9050919050565b6000602082019050818103600083015261123681610fb7565b9050919050565b6000602082019050818103600083015261125681610fda565b9050919050565b6000602082019050818103600083015261127681611020565b9050919050565b60006020820190506112926000830184611043565b92915050565b60006112a26112b3565b90506112ae8282611453565b919050565b6000604051905090565b600067ffffffffffffffff8211156112d8576112d76114e2565b5b602082029050602081019050919050565b600067ffffffffffffffff821115611304576113036114e2565b5b61130d82611511565b9050602081019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113478261142d565b91506113528361142d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561138757611386611484565b5b828201905092915050565b600061139d8261142d565b91506113a88361142d565b9250826113b8576113b76114b3565b5b828204905092915050565b60006113ce8261140d565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b61145c82611511565b810181811067ffffffffffffffff8211171561147b5761147a6114e2565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f5472616e736665727265642066756e642063616e2774206265207a65726f0000600082015250565b7f5468697320636f6e747261637420646f65736e2774206861766520616363657360008201527f7320746f206d6f766520796f7572206173736574732e20506c6561736520617060208201527f70726f7665207468697320636f6e7472616374206173206f70657261746f722060408201527f746f20636f6e74696e75652e0000000000000000000000000000000000000000606082015250565b7f5472616e7366657272696e67206574686572206172652072657175697265642060008201527f746f2073656375726520746f6b656e7300000000000000000000000000000000602082015250565b7f52657175657374656420746f6b656e206578636565642074686520617661696c60008201527f61626c6520616d6f756e74000000000000000000000000000000000000000000602082015250565b7f4f6e6c792070726f7065727479206f776e657220686173206163636573730000600082015250565b50565b7f496e73756666696369656e742046756e64000000000000000000000000000000600082015250565b6116e2816113c3565b81146116ed57600080fd5b50565b6116f9816113d5565b811461170457600080fd5b50565b611710816113e1565b811461171b57600080fd5b50565b6117278161142d565b811461173257600080fd5b5056fea2646970667358221220c7155f169ea60a0b3b163fdfc6e47319bd596243618301c14ddcb7acc0e6311a64736f6c63430008040033";

export class REFractional__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<REFractional> {
    return super.deploy(_token, overrides || {}) as Promise<REFractional>;
  }
  getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  attach(address: string): REFractional {
    return super.attach(address) as REFractional;
  }
  connect(signer: Signer): REFractional__factory {
    return super.connect(signer) as REFractional__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): REFractionalInterface {
    return new utils.Interface(_abi) as REFractionalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): REFractional {
    return new Contract(address, _abi, signerOrProvider) as REFractional;
  }
}
