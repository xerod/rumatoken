/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { REFractional, REFractionalInterface } from "../REFractional";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "REObjects",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "securePeriod",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "securedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "buyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintUniqueTokenTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "payRent",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "secureToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "withdrawOperatingCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001791380380620017918339818101604052810190620000379190620000d6565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000150565b600081519050620000d08162000136565b92915050565b600060208284031215620000e957600080fd5b6000620000f984828501620000bf565b91505092915050565b60006200010f8262000116565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001418162000102565b81146200014d57600080fd5b50565b61163180620001606000396000f3fe6080604052600436106100915760003560e01c8063bc197c8111610059578063bc197c8114610173578063d9e8843f146101b0578063e1cba580146101cc578063ea77f469146101f5578063f23a6e611461023557610091565b806301ffc9a714610096578063057466ea146100d357806312065fe0146100ef578063b6d5e8cd1461011a578063b762722814610157575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610d9c565b610272565b6040516100ca9190611096565b60405180910390f35b6100ed60048036038101906100e89190610e17565b6102ec565b005b3480156100fb57600080fd5b5061010461058c565b604051610111919061116c565b60405180910390f35b34801561012657600080fd5b50610141600480360381019061013c9190610d37565b610594565b60405161014e919061116c565b60405180910390f35b610171600480360381019061016c9190610e17565b61069c565b005b34801561017f57600080fd5b5061019a60048036038101906101959190610be9565b6108c0565b6040516101a791906110b1565b60405180910390f35b6101ca60048036038101906101c59190610dc5565b6108d5565b005b3480156101d857600080fd5b506101f360048036038101906101ee9190610e17565b6108d8565b005b34801561020157600080fd5b5061021c60048036038101906102179190610dc5565b610982565b60405161022c9493929190611051565b60405180910390f35b34801561024157600080fd5b5061025c60048036038101906102579190610ca8565b6109df565b60405161026991906110b1565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102e557506102e4826109f4565b5b9050919050565b6002600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008281526020019081526020016000206002015482346103869190611281565b10156103c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103be9061114c565b60405180910390fd5b8160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b8152600401610444929190610ff1565b60206040518083038186803b15801561045c57600080fd5b505afa158015610470573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104949190610dee565b10156104d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cc9061110c565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163384866040518563ffffffff1660e01b81526004016105569493929190610f99565b600060405180830381600087803b15801561057057600080fd5b505af1158015610584573d6000803e3d6000fd5b505050505050565b600047905090565b60006105a06001610a5e565b60006105ac6001610a74565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663156e29f68583866040518463ffffffff1660e01b815260040161060b9392919061101a565b600060405180830381600087803b15801561062557600080fd5b505af1158015610639573d6000803e3d6000fd5b50505050836002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508091505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b81526004016106f7929190610f70565b60206040518083038186803b15801561070f57600080fd5b505afa158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190610d73565b610786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077d906110cc565b60405180910390fd5b600034116107c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c0906110ec565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333084866040518563ffffffff1660e01b81526004016108289493929190610f99565b600060405180830381600087803b15801561084257600080fd5b505af1158015610856573d6000803e3d6000fd5b5050505081600260008381526020019081526020016000206001015461087c919061122b565b600260008381526020019081526020016000206001018190555081346108a29190611281565b60026000838152602001908152602001600020600201819055505050565b600063bc197c8160e01b905095945050505050565b50565b806002600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461097d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109749061112c565b60405180910390fd5b505050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060010154908060020154905084565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6000610a95610a90846111ac565b611187565b90508083825260208201905082856020860282011115610ab457600080fd5b60005b85811015610ae45781610aca8882610bbf565b845260208401935060208301925050600181019050610ab7565b5050509392505050565b6000610b01610afc846111d8565b611187565b905082815260208101848484011115610b1957600080fd5b610b24848285611333565b509392505050565b600081359050610b3b8161159f565b92915050565b600082601f830112610b5257600080fd5b8135610b62848260208601610a82565b91505092915050565b600081519050610b7a816115b6565b92915050565b600081359050610b8f816115cd565b92915050565b600082601f830112610ba657600080fd5b8135610bb6848260208601610aee565b91505092915050565b600081359050610bce816115e4565b92915050565b600081519050610be3816115e4565b92915050565b600080600080600060a08688031215610c0157600080fd5b6000610c0f88828901610b2c565b9550506020610c2088828901610b2c565b945050604086013567ffffffffffffffff811115610c3d57600080fd5b610c4988828901610b41565b935050606086013567ffffffffffffffff811115610c6657600080fd5b610c7288828901610b41565b925050608086013567ffffffffffffffff811115610c8f57600080fd5b610c9b88828901610b95565b9150509295509295909350565b600080600080600060a08688031215610cc057600080fd5b6000610cce88828901610b2c565b9550506020610cdf88828901610b2c565b9450506040610cf088828901610bbf565b9350506060610d0188828901610bbf565b925050608086013567ffffffffffffffff811115610d1e57600080fd5b610d2a88828901610b95565b9150509295509295909350565b60008060408385031215610d4a57600080fd5b6000610d5885828601610b2c565b9250506020610d6985828601610bbf565b9150509250929050565b600060208284031215610d8557600080fd5b6000610d9384828501610b6b565b91505092915050565b600060208284031215610dae57600080fd5b6000610dbc84828501610b80565b91505092915050565b600060208284031215610dd757600080fd5b6000610de584828501610bbf565b91505092915050565b600060208284031215610e0057600080fd5b6000610e0e84828501610bd4565b91505092915050565b60008060408385031215610e2a57600080fd5b6000610e3885828601610bbf565b9250506020610e4985828601610bbf565b9150509250929050565b610e5c816112b2565b82525050565b610e6b816112c4565b82525050565b610e7a816112d0565b82525050565b6000610e8d606c8361121a565b9150610e9882611411565b608082019050919050565b6000610eb060308361121a565b9150610ebb826114ac565b604082019050919050565b6000610ed3602b8361121a565b9150610ede826114fb565b604082019050919050565b6000610ef6601e8361121a565b9150610f018261154a565b602082019050919050565b6000610f19600083611209565b9150610f2482611573565b600082019050919050565b6000610f3c60118361121a565b9150610f4782611576565b602082019050919050565b610f5b8161131c565b82525050565b610f6a81611326565b82525050565b6000604082019050610f856000830185610e53565b610f926020830184610e53565b9392505050565b600060a082019050610fae6000830187610e53565b610fbb6020830186610e53565b610fc86040830185610f52565b610fd56060830184610f52565b8181036080830152610fe681610f0c565b905095945050505050565b60006040820190506110066000830185610e53565b6110136020830184610f52565b9392505050565b600060608201905061102f6000830186610e53565b61103c6020830185610f52565b6110496040830184610f52565b949350505050565b60006080820190506110666000830187610e53565b6110736020830186610f61565b6110806040830185610f52565b61108d6060830184610f52565b95945050505050565b60006020820190506110ab6000830184610e62565b92915050565b60006020820190506110c66000830184610e71565b92915050565b600060208201905081810360008301526110e581610e80565b9050919050565b6000602082019050818103600083015261110581610ea3565b9050919050565b6000602082019050818103600083015261112581610ec6565b9050919050565b6000602082019050818103600083015261114581610ee9565b9050919050565b6000602082019050818103600083015261116581610f2f565b9050919050565b60006020820190506111816000830184610f52565b92915050565b60006111916111a2565b905061119d8282611342565b919050565b6000604051905090565b600067ffffffffffffffff8211156111c7576111c66113d1565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156111f3576111f26113d1565b5b6111fc82611400565b9050602081019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006112368261131c565b91506112418361131c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561127657611275611373565b5b828201905092915050565b600061128c8261131c565b91506112978361131c565b9250826112a7576112a66113a2565b5b828204905092915050565b60006112bd826112fc565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b61134b82611400565b810181811067ffffffffffffffff8211171561136a576113696113d1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f5468697320636f6e747261637420646f65736e2774206861766520616363657360008201527f7320746f206d6f766520796f7572206173736574732e20506c6561736520617060208201527f70726f7665207468697320636f6e7472616374206173206f70657261746f722060408201527f746f20636f6e74696e75652e0000000000000000000000000000000000000000606082015250565b7f5472616e7366657272696e67206574686572206172652072657175697265642060008201527f746f2073656375726520746f6b656e7300000000000000000000000000000000602082015250565b7f52657175657374656420746f6b656e206578636565642074686520617661696c60008201527f61626c6520616d6f756e74000000000000000000000000000000000000000000602082015250565b7f4f6e6c792070726f7065727479206f776e657220686173206163636573730000600082015250565b50565b7f496e73756666696369656e742046756e64000000000000000000000000000000600082015250565b6115a8816112b2565b81146115b357600080fd5b50565b6115bf816112c4565b81146115ca57600080fd5b50565b6115d6816112d0565b81146115e157600080fd5b50565b6115ed8161131c565b81146115f857600080fd5b5056fea26469706673582212200f9fcab808e5fedc9adac3f87d63e8f3ac2b442264731051408867201a767b6c64736f6c63430008040033";

export class REFractional__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<REFractional> {
    return super.deploy(_token, overrides || {}) as Promise<REFractional>;
  }
  getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  attach(address: string): REFractional {
    return super.attach(address) as REFractional;
  }
  connect(signer: Signer): REFractional__factory {
    return super.connect(signer) as REFractional__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): REFractionalInterface {
    return new utils.Interface(_abi) as REFractionalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): REFractional {
    return new Contract(address, _abi, signerOrProvider) as REFractional;
  }
}
